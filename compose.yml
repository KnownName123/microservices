services:
  resource-db:
    image: postgres:17-alpine
    container_name: resource-db
    restart: always
    environment:
      POSTGRES_DB: ${RESOURCE_DB}
      POSTGRES_USER: ${RESOURCE_DB_USER}
      POSTGRES_PASSWORD: ${RESOURCE_DB_PASS}
    ports:
      - "${RESOURCE_DB_PORT}:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d

  song-db:
    image: postgres:17-alpine
    container_name: song-db
    restart: always
    environment:
      POSTGRES_DB: ${SONG_DB}
      POSTGRES_USER: ${SONG_DB_USER}
      POSTGRES_PASSWORD: ${SONG_DB_PASS}
    ports:
      - "${SONG_DB_PORT}:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d

  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    container_name: resource-service
    restart: always
    environment:
      SERVER_PORT: ${CONTAINER_PORT}
      SPRING_DATASOURCE_URL: jdbc:postgresql://resource-db:5432/${RESOURCE_DB}
      SPRING_DATASOURCE_USERNAME: ${RESOURCE_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCE_DB_PASS}
      SONG_SERVICE_URL: http://song-service/songs
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8080/eureka/
    ports:
      - "${RESOURCE_SERVICE_PORT}:8080"
    depends_on:
      - resource-db
      - song-service
      - eureka-server

  song-service:
    build:
      context: ./song-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080"
    environment:
      SERVER_PORT: ${CONTAINER_PORT}
      SPRING_DATASOURCE_URL: jdbc:postgresql://song-db:5432/${SONG_DB}
      SPRING_DATASOURCE_USERNAME: ${SONG_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${SONG_DB_PASS}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8080/eureka/
    depends_on:
      - song-db
      - eureka-server

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    restart: always
    environment:
      SERVER_PORT: ${CONTAINER_PORT}
    ports:
      - "${EUREKA_SERVER_PORT}:8080"

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    restart: always
    environment:
      SERVER_PORT: ${CONTAINER_PORT}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8080/eureka/
    ports:
      - "${GATEWAY_SERVICE_PORT}:8080"
    depends_on:
      - eureka-server
